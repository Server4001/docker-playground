upstream wordpress_fpm {
    server php:9000;
}

server {
    listen 80;
    index index.php index.html index.htm;
    server_name dev.dockerubuntu.loc dev.dockercentos.loc localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ /\. {
    	deny all;
    }

    location ~* /(?:uploads|files)/.*\.php$ {
    	deny all;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # TODO : FIX THIS
    # location /wp-admin {
    #     rewrite /wp/wp-admin permanent;
    # }
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|js|css)$ {
           access_log off; log_not_found off; expires max;
    }

    location ~ [^/]\.php(/|$) {
    	fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    	if (!-f $document_root$fastcgi_script_name) {
    		return 404;
    	}
    	# This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

    	include fastcgi.conf;
    	fastcgi_index index.php;
     	fastcgi_intercept_errors on;
    	fastcgi_pass wordpress_fpm;
    }
}
